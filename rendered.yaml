---
# Source: sampleapp1/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sampleapp1-svc
  namespace: sampleapp
  labels:
    app.kubernetes.io/name: sampleapp1
    app.kubernetes.io/instance: RELEASE-NAME
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: sampleapp1
    app.kubernetes.io/instance: RELEASE-NAME

---
# Source: sampleapp1/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sampleapp1
  namespace: sampleapp
spec:
  replicas: 5
  selector:
    matchLabels:
      app.kubernetes.io/name: sampleapp1
      app.kubernetes.io/instance: RELEASE-NAME
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sampleapp1
        app.kubernetes.io/instance: RELEASE-NAME
    spec:
      containers:
        - name: sampleapp1
          image: gcr.io/google-samples/hello-app:1.0
          imagePullPolicy: Always # IfNotPresent
          env:
          - name: INSTANCE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: INSTANCE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP

---
# Source: sampleapp1/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sampleapp1-ingress
  namespace: sampleapp
  labels:
    app: hello
spec:
  defaultBackend:
    service:
      name: sampleapp1-svc
      port:
        number: 8080


